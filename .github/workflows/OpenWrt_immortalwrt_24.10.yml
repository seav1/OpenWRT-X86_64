name: OpenWrt_immortalwrt_24.10

on:
  repository_dispatch:
  workflow_dispatch:
  # schedule:
  #   - cron: 11 23 * * * 
  # watch:
  #   types: started

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: configs/immortalwrt_24.10/immortalwrt.config
  DIY_SH: scripts/immortalwrt_24.10/immortalwrt.sh
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-20.04  # 指定 Ubuntu 20.04，更稳定
    outputs:
      OPENWRTROOT: ${{ steps.update.outputs.OPENWRTROOT }}
      PLATFORM: ${{ steps.compile.outputs.PLATFORM }}
      TARGET: ${{ steps.compile.outputs.TARGET }}
      SUBTARGET: ${{ steps.compile.outputs.SUBTARGET }}
      FIRMWARE: ${{ steps.compile.outputs.FIRMWARE }}
      GENERATE_STATUS: ${{ steps.generate.outputs.GENERATE_STATUS }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
          file wget diffutils dos2unix libtool-bin curl cmake autoconf automake binutils \
          bzip2 libreadline-dev patch gperf lib32gcc1 libc6-dev-i386 subversion \
          flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev \
          xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler \
          g++-multilib antlr3 gperf libevent-dev libexpat1-dev libgmp3-dev libmpc-dev \
          libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev swig libtool wget \
          python3 python3-pip python3-ply python3-docutils python3-setuptools rename
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
        # 增加 swap 空间
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo dd if=/dev/zero of=/swapfile bs=1G count=8
        sudo mkswap /swapfile
        sudo swapon /swapfile
        
        # 创建工作目录
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        # 显示系统信息
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a

    # 设置编译所需的 ulimit 参数
    - name: Set Build Environment Variables
      run: |
        ulimit -u 65535
        ulimit -n 65535
        ulimit -s 65535
        
    - name: Free Disk Space
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false
      
    - name: Clone Source Code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update Feeds
      id: update
      run: |
        cd /workdir/openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        echo "OPENWRTROOT=$PWD" >> $GITHUB_OUTPUT
        mkdir customfeeds
        git clone --depth=1 https://github.com/xuanranran/openwrt-package customfeeds/lovepackages
        git clone --depth=1 https://github.com/xuanranran/rely customfeeds/loverely
        git clone --depth=1 https://github.com/immortalwrt/packages -b $REPO_BRANCH customfeeds/packages
        git clone --depth=1 https://github.com/immortalwrt/luci -b $REPO_BRANCH customfeeds/luci
        git clone --depth=1 https://github.com/openwrt/routing -b $REPO_BRANCH customfeeds/routing
        git clone --depth=1 https://github.com/openwrt/telephony -b $REPO_BRANCH customfeeds/telephony
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        chmod +x $GITHUB_WORKSPACE/scripts/immortalwrt_24.10/*.sh
        $GITHUB_WORKSPACE/scripts/immortalwrt_24.10/hook-package.sh
        $GITHUB_WORKSPACE/scripts/immortalwrt_24.10/hook-base.sh
        $GITHUB_WORKSPACE/scripts/immortalwrt_24.10/hook-feeds.sh
        
    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e $GITHUB_WORKSPACE/files ] && mv $GITHUB_WORKSPACE/files $OPENWRTROOT/files
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && mv $GITHUB_WORKSPACE/$CONFIG_FILE $OPENWRTROOT/.config
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        cd $OPENWRTROOT
        $GITHUB_WORKSPACE/$DIY_SH
        $GITHUB_WORKSPACE/scripts/preset-clash-core.sh amd64
        $GITHUB_WORKSPACE/scripts/preset-mihomo-core.sh amd64
        $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
        make defconfig
        
    - name: Download Package
      id: package
      run: |
        cd $OPENWRTROOT
        cat .config
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
  
    - name: Compile Packages
      id: compile
      run: |
        cd $OPENWRTROOT
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) V=s || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) V=s || make toolchain/compile -j1 V=s
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
        make package/index
        cd $OPENWRTROOT/bin/packages/*
        PLATFORM=$(basename `pwd`)
        echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
        echo "PLATFORM=$PLATFORM" >> $GITHUB_OUTPUT
        cd $OPENWRTROOT/bin/targets/*
        TARGET=$(basename `pwd`)
        echo "TARGET=$TARGET" >> $GITHUB_ENV
        echo "TARGET=$TARGET" >> $GITHUB_OUTPUT
        cd *
        SUBTARGET=$(basename `pwd`)
        echo "SUBTARGET=$SUBTARGET" >> $GITHUB_ENV
        echo "SUBTARGET=$SUBTARGET" >> $GITHUB_OUTPUT
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "FIRMWARE=$PWD" >> $GITHUB_OUTPUT
        echo "COMPILE_STATUS=success" >> $GITHUB_OUTPUT

    - name: Generate Firmware
      if: steps.compile.outputs.COMPILE_STATUS == 'success'
      id: generate
      run: |
        cd $OPENWRTROOT
        mkdir -p files/etc/uci-defaults/
        cp $GITHUB_WORKSPACE/scripts/immortalwrt_24.10/immortalwrt-init-settings.sh files/etc/uci-defaults/99-init-settings
        mkdir -p files/etc/opkg
        cp $GITHUB_WORKSPACE/configs/opkg/distfeeds-24.10-local.conf files/etc/opkg/distfeeds.conf
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        pushd bin/targets/x86/64
        kernelv=`cat immortalwrt-x86-64-generic.manifest | grep 'kernel - ' |  awk -F '[- ]' '{print $4}'`
        echo "kernel_version=$kernelv" >> $GITHUB_OUTPUT
        mv config.buildinfo $(date +"%Y.%m.%d")-immortalwrt-config.buildinfo
        popd
        make checksum
        mv bin/targets/x86/64/sha256sums bin/targets/x86/64/$(date +"%Y.%m.%d")-immortalwrt-sha256sums
        echo "GENERATE_STATUS=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
          echo "release_tag=$(date +"%Y.%m.%d")-immortalwrt2" >> $GITHUB_OUTPUT
          echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "后台地址：192.168.8.1" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT
          
    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: ${{ steps.tag.outputs.release_date }} x86_64-immortalwrt-24.10 固件
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*.img.gz

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 5
          keep_minimum_runs: 5

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
          keep_latest: 240
          delete_tags: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
         name: |
            bin-archive
